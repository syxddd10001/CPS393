


                               /
                               |
               ------------------------------------
               |               |                  |
            home              bin                usr
             |                 |                  |
       --------------      ---------            courses
       |     |      |      |   |   |              |
     dwoit acari  r2jan   cp  rm  mv          ----------
       |                                      |        |
  ---------                                  bin     cps393
  |        |                                  |          |
cps209  cps393                              ------       --------
  |        |                               |     |        |     |
oop   ---------                          i386   sparc          dwoit
      |        |                           |                     |
 class.list  labs                       -----------------        ----------
               |                        |               |           |     |
            -------                 submit-cps393dwoit           labs
            |     |                                                |
        lab1.txt lab2.txt                                   ---------------
                                                            |    |        |
                                                         u1Lab  u2Lab  vimLab
                                                                        |
                                                                 -------------
                                                                 |           |
                                                         vimLab.txt    vimTutorial.txt



HMWK: For the file system (tree) given above, show how file
vimTutorial.txt can be displayed, using an absolute path name.
Show how file class.list can be displayed, using a relative path
name, assuming you are "in" directory /home/dwoit. What is the
absolute path name for directory usr? There are 2 "bin" directories
in the tree, give the absolute path for each. Give the relative
path for each, assuming you are in the root directory.

ANSW:
cat /usr/courses/cps393/dwoit/labs/vimLab/vimTutorial.txt
cat cps393/class.list
/usr
/bin  /usr/courses/bin
bin  usr/courses/bin



HMWK: give the sequence of commands that you would issue from your
home directory to do the following, in the order given: create 2
directories, lab1 and lab2, create a subdirectory of lab1 called
documentation; copy file /usr/courses/cps393/dwoit/labs/doc.txt
into your directory called documentation;
move your documentation/doc.txt into directory lab2 instead;
list the contents of directory documentation using an absolute path;
list contents of directory documentation again using a relative path;
make directory lab2 your current working directory; list contents of
file doc.txt; move back into your home directory; delete your file
doc.txt, then delete directory documentation, then, using an
absolute path, delete lab1 and lab2.

ANSW:
mkdir lab1 lab2
cd lab1
mkdir documentation
cp /usr/courses/cps393/dwoit/labs/doc.txt documentation
mv documentation/doc.txt  ../lab2/.
ls /home/USERID/lab1/documentation
ls documentation
cd ../lab2
cat doc.txt
cd
rm lab2/doc.txt
rmdir lab1/documentation
rm /home/USERID/lab1 /home/USERID/lab2


HMWK: From your home directory, create 3 files, called tst1, tst2
and tst3, with vim (just enter one word or sentence in each file).
Use the man pages to determine the option for the "ls" command that
will get the following displayed on the screen:   tst1, tst2, tst2
Use the man pages to determine the option of the "more" command that
will display a group of consecutive blank lines as a single blank
line on the screen.
Use the man's appropos option to find all the browsers supported on linux

ANSW:
cd
vim tst1   
vim tst2   
vim tst3   
man ls
#the point of this is not the actual OPTION you find. The point is
#that you learn how to search a man page for something!!
#search for string: comma
/comma
#search again with: n
#keep searching with repeated: n
#you should find options -m or --format=comma
ls -m tst1 tst2 tst3
man more
#again...the point is for you to do the search
/blank
#the option you find is -s
man -k browser
#note that man -k browsers (s on end) doesn't give you what you want



HMWK: If you had a directory called dog that had read permissions
for everyone, and write permissions only for the owner, and execute
permissions for the group and others, what would the permissions
part of a "long listing" of the directory look like? Assuming you
were in the parent directory of dog, what is the command that would
remove all permissions for group and other? Then, what command would
give execute permissions to everyone, read permissions to the group,
and remove write permissions for the user?
You have default permissions for all files you create. If you haven't
done so yet, create 3 files, called tst1, tst2 and tst3, with vim
(just enter one word or sentence in each file). Then from your home
directory, use whatever commands you need to discover what the default
permissions are on all files you create.
Express this in numeric mode: chmod u=rwx,g=rw,o=x myfile

ANSW:
rw-r-xr-x
chmod go= dog  (or chmod go-r-w-x, or chmod g=,o-r-w-x  etc)
chmod a+x,g+r,u-w
vim tst1
vim tst2
vim tst3
ls -l tst1 tst2 tst3
#note the permissions. Answers may vary. Mine are : rw-rw----
chmod 761 myfile

HMWK:
Create a file called tst1, and a directory called dog, in your
home directory (if you haven't done so already.) Copy tst1 to a
file called cat in directory dog. Move into dog. Remove write
and execute permissions for user (that's you!) on file cat. Now
try to erase cat. What happens? Why? How can you erase it? (give
2 different ways, if possible)

ANSW:
cd
touch tst1   #or vim tst1
mkdir dog
cp tst1 dog/cat
cd dog
chmod u-w-x cat
rm cat
#I get: rm: remove write-protected regular empty file `cat'?
#I type: y
#and the file is removed.
#Another way. Type: n
chmod u+w
rm cat


HMWK: Copy file tst1 to file tst.new, without using the cp command;
instead use output redirection.
Make sure there is no file called xxx in your home dir. Using the
"cp" command, try to copy file xxx to file yyy. What happens? Is
there a way you can use output redirection so that "cp" will not
display any messages on the screen when you try to copy xxx?
What commands could you use to create a file called dir.and.list
that contained the name of your current directory on the first
line, and a list of files in the current directory on subsequent
lines (you must create dir.and.list using UNIX commands, *not*
using an editor, such as vim.)
Show 2 different ways you can use the "cat" command to create a
file called big.tst, which contains file tst1, followed by tst2,
followed by tst3.
The nl command can be used to number lines given on stdin. Try it.
Use the nl command to make a file named num1.txt, which is an exact
copy of unix1.txt, except with line numbers. You must get nl to read
unix1.txt by REDIRECTING stdin.

ANSW:
cat tst1 >tst.new
ls  
#if there is an xxx, do: rm xxx
cp xxx yyy
#I get error message: cp: cannot stat `xxx': No such file or directory
cp xxx yyy 2>/dev/null
pwd >dir.and.list
ls >>dir.and.list
#Way 1:
cat tst1 >big.tst
cat tst2 >>big.tst
cat tst3 >>big.tst
#Way 2:
cat tst1 tst2 tst3 >big.tst
#here is me trying nl (note > is my prompt)
> nl
entering a line
     1  entering a line
and another line
     2  and another line
and a third line
     3  and a third line
>                #I entered ctrl-d to end stdin
nl </usr/courses/cps393/dwoit/courseNotes/unix1.txt >num1.txt

